{"version":3,"file":"static/js/76.06f1f6cf.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/Loader/Loader.jsx","service/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__-isbW\",\"title_img\":\"Cast_title_img__RxsVc\",\"text_data\":\"Cast_text_data__tdMTy\"};","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { themoviedbApiActorFilm } from 'service/themoviedb';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [actorData, setActorData] = useState(null);\n\n  useEffect(() => {\n    async function getCast() {\n      try {\n        setIsLoading(true);\n\n        const data = await themoviedbApiActorFilm(movieId);\n\n        //Если нет пришедших данных-выходим\n        if (!data) return;\n\n        setActorData(data);\n      } catch (error) {\n        setError('Что-то пошло не так');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {actorData &&\n        actorData.map(({ name, profile_path, character, id }) => {\n          return (\n            <ul>\n              <li key={id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt=\"foto actor\"\n                  className={css.img}\n                />\n                <h3 className={css.title_img}>{name}</h3>\n                <p className={css.text_data}>Character:</p>\n                <p className={css.text_data}>{character}</p>\n              </li>\n            </ul>\n          );\n        })}\n      {isLoading && <Loader />}\n\n      {error && <p>{error}</p>}\n    </>\n  );\n};\n\nexport default Cast;\n","import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n","import axios from 'axios';\n\nexport const themoviedbApi = async () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n\n  return response.data;\n};\n\n// запрос полной информации о фильме для страницы кинофильма.\n\nexport const themoviedbMoviesApiFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n\n  const { title, overview, poster_path, release_date, vote_average } =\n    response.data;\n\n  return { title, overview, poster_path, release_date, vote_average };\n};\n\n// поиск фильма введенного пользователем в инпут\nexport const themoviedbGetFilm = async query => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  // const { results } = response.data;\n\n  return response.data;\n};\n\n// запрос на актерский состав Cast\nexport const themoviedbApiActorFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n\n  const data = cast.map(({ name, profile_path, character, id }) => {\n    return {\n      name,\n      profile_path,\n      character,\n      id,\n    };\n  });\n  return data;\n};\n\n// Запрос на информацию о фильме\n\nexport const themoviedbApiInfoFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  const dataInfo = results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n\n  return dataInfo;\n};\n"],"names":["movieId","useParams","useState","isLoading","setIsLoading","error","setError","actorData","setActorData","useEffect","themoviedbApiActorFilm","data","getCast","map","name","profile_path","character","id","src","alt","className","css","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","themoviedbApi","options","method","headers","accept","Authorization","axios","response","themoviedbMoviesApiFilm","title","overview","poster_path","release_date","vote_average","themoviedbGetFilm","query","cast","themoviedbApiInfoFilm","results","dataInfo","author","content"],"sourceRoot":""}