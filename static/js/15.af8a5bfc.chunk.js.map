{"version":3,"file":"static/js/15.af8a5bfc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Films/Films.module.css?4147","components/Films/Films.jsx","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/SearchForm.jsx","pages/Movies.jsx","service/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"film_title\":\"Films_film_title__ZvoLl\",\"text\":\"Films_text__IBU2d\",\"active\":\"Films_active__20HqF\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './Films.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Films = ({ popularFilms }) => {\n  const location = useLocation();\n  console.log(location);\n\n  return (\n    <ul className={css.film_title}>\n      {popularFilms.map(({ id, title }) => {\n        return (\n          <Link\n            className={css.text}\n            to={`/movies/${id}`}\n            key={id}\n            id={id}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        );\n      })}\n    </ul>\n  );\n};\nFilms.propTypes = {\n  popularFilms: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { Circles } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Circles\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_form\":\"Form_search_form__sJZOh\",\"searchForm\":\"Form_searchForm__eyCyq\",\"button\":\"Form_button__8NOIT\",\"label\":\"Form_label__8nx+5\",\"input\":\"Form_input__FTtTw\"};","import { useSearchParams } from 'react-router-dom';\nimport css from './Form.module.css';\n\nexport const SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Находим значение из инпута\n    const query = e.target.name.value.toLowerCase().trim();\n\n    if (!query) {\n      alert('введите данные для поиска');\n      return;\n    }\n    // Записываем значение из инпута в URL строку\n\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <div>\n      <form className={css.search_form} onSubmit={handleSubmit}>\n        <input\n          className={css.input}\n          type=\"text\"\n          autocomplete=\"off\"\n          autofocus\n          placeholder=\"Search images and photos\"\n          name=\"name\"\n        />\n        <button type=\"submit\" className={css.button}>\n          <span className={css.label}>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { themoviedbGetFilm } from 'service/themoviedb';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { Films } from 'components/Films/Films';\nimport { SearchForm } from 'components/Form/SearchForm';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [popularFilm, setpopularFilm] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [error, setError] = useState('');\n  // Достаем значение из URL строки и используем для запроса\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    (async () => {\n      try {\n        setIsloading(true);\n        const { results } = await themoviedbGetFilm(query);\n\n        // переберем массив и сoздадим новый с необходимыми свойствами\n        const newResults = results.map(({ title, id, poster_path }) => {\n          return { title, id, poster_path };\n        });\n\n        setpopularFilm(newResults);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    })();\n  }, [query]);\n\n  return (\n    <>\n      <div>\n        <SearchForm />\n        {popularFilm.length > 0 && <Films popularFilms={popularFilm} />}\n        {isloading && <Loader />}\n        {error && <p>{error}</p>}\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nexport const themoviedbApi = async () => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?language=en-US',\n    options\n  );\n\n  return response.data;\n};\n\n// запрос полной информации о фильме для страницы кинофильма.\n\nexport const themoviedbMoviesApiFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n\n  const { title, overview, poster_path, release_date, vote_average } =\n    response.data;\n\n  return { title, overview, poster_path, release_date, vote_average };\n};\n\n// поиск фильма введенного пользователем в инпут\nexport const themoviedbGetFilm = async query => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  // const { results } = response.data;\n\n  return response.data;\n};\n\n// запрос на актерский состав Cast\nexport const themoviedbApiActorFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  const { cast } = response.data;\n\n  const data = cast.map(({ name, profile_path, character, id }) => {\n    return {\n      name,\n      profile_path,\n      character,\n      id,\n    };\n  });\n  return data;\n};\n\n// Запрос на информацию о фильме\n\nexport const themoviedbApiInfoFilm = async movieId => {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2YjdiOWUxNGYzNTg3NjIwODVjNGE4YzkxYzc5ZjhlZSIsInN1YiI6IjY0NzM0NTgwNWNkMTZlMDExNmQ5NzRhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.j8VcB9r4iSid7CNi1G7L9GBX-4TzHHGev52Q2Kpm-aQ',\n    },\n  };\n\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n  const { results } = response.data;\n  const dataInfo = results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n\n  return dataInfo;\n};\n"],"names":["Films","popularFilms","location","useLocation","console","log","className","css","map","id","title","to","state","from","Loader","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","SearchForm","useSearchParams","setSearchParams","onSubmit","e","preventDefault","query","target","name","value","toLowerCase","trim","alert","type","autocomplete","autofocus","placeholder","searchParams","useState","popularFilm","setpopularFilm","isloading","setIsloading","error","setError","get","useEffect","themoviedbGetFilm","results","newResults","poster_path","message","length","themoviedbApi","options","method","headers","accept","Authorization","axios","response","data","themoviedbMoviesApiFilm","movieId","overview","release_date","vote_average","themoviedbApiActorFilm","cast","profile_path","character","themoviedbApiInfoFilm","dataInfo","author","content"],"sourceRoot":""}